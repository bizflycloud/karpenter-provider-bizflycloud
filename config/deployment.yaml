apiVersion: apps/v1
kind: Deployment
metadata:
  name: karpenter-provider-bizflycloud
  namespace: karpenter
  labels:
    app.kubernetes.io/name: karpenter-provider-bizflycloud
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: karpenter
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: karpenter-provider-bizflycloud
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: karpenter-provider-bizflycloud
        app.kubernetes.io/component: controller
        app.kubernetes.io/part-of: karpenter
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      serviceAccountName: karpenter-provider-bizflycloud
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - karpenter-provider-bizflycloud
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
      containers:
      - name: controller
        image: cr-hn-1.bizflycloud.vn/31ff9581861a4d0ea4df5e7dda0f665d/karpenter-provider-bizflycloud:latest
        imagePullPolicy: IfNotPresent
        args:
          - --leader-elect
          - --metrics-addr=:8080
          - --health-probe-addr=:8081
          - --loglevel=info
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: KUBERNETES_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        ports:
          - name: http-metrics
            containerPort: 8080
            protocol: TCP
          - name: https-health
            containerPort: 8081
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: karpenter-provider-bizflycloud
  namespace: karpenter
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: karpenter-provider-bizflycloud
rules:
# Node management
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch", "create", "delete", "patch"]

# Provider configuration
- apiGroups: ["bizflycloud.karpenter.sh"]
  resources: ["providerconfigs", "providerconfigs/status"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Secret access for credentials
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]

# Status reporting and events
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch", "update"]

# Coordination and leadership election
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "create", "update", "delete"]

# Metrics publishing
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Pod info for drift detection
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: karpenter-provider-bizflycloud
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: karpenter-provider-bizflycloud
subjects:
- kind: ServiceAccount
  name: karpenter-provider-bizflycloud
  namespace: karpenter
---
apiVersion: v1
kind: Service
metadata:
  name: karpenter-provider-bizflycloud-metrics
  namespace: karpenter
  labels:
    app.kubernetes.io/name: karpenter-provider-bizflycloud
    app.kubernetes.io/component: controller
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
spec:
  type: ClusterIP
  ports:
  - name: metrics
    port: 8080
    targetPort: http-metrics
    protocol: TCP
  selector:
    app.kubernetes.io/name: karpenter-provider-bizflycloud