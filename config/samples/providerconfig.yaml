apiVersion: bizflycloud.karpenter.sh/v1alpha1
kind: ProviderConfig
metadata:
  name: default
spec:
  # Required: BizFly Cloud region to use (HN1, HN2, HCM1)
  region: HN1
  
  # Required: Reference to secret containing BizFly Cloud credentials
  secretRef:
    name: bizflycloud-credentials
    namespace: karpenter
  
  # Optional: Configure tagging behavior for resources
  tagging:
    # Enable tagging of created resources
    enableResourceTags: true
    # Prefix used for all Karpenter-managed resource tags
    tagPrefix: "karpenter.bizflycloud.sh/"
    # Additional tags to apply to all created resources
    additionalTags:
      environment: "production"
      owner: "platform-team"
      managed-by: "karpenter"
  
  # Optional: Configure BizFly Cloud API connection
  cloudConfig:
    # API endpoint URL
    apiEndpoint: "https://manage.bizflycloud.vn/api"
    # Maximum number of retry attempts for API calls
    retryMaxAttempts: 5
    # Initial delay between retry attempts
    retryInitialDelay: "1s"
    # Maximum time to wait for API operations
    timeout: "30s"
  
  # Optional: Configure instance image and settings
  imageConfig:
    # BizFly Cloud image ID or name 
    imageID: "ubuntu-20.04"
    # Optional: SSH key name to add to instances
    sshKeyName: "karpenter-key"
    # Size of the root disk in GB
    rootDiskSize: 20
    # Enable IPv6 on the instances
    enableIPv6: false
    # Optional: Custom user data to include
    userDataTemplate: |
      # Custom cloud-init directives to include in all nodes
      packages:
        - ca-certificates
        - curl
        - nfs-common
      runcmd:
        - echo "custom initialization complete" >> /var/log/cloud-init-output.log
  
  # Optional: Configure drift detection 
  driftDetection:
    # Enable drift detection
    enabled: true
    # Interval between drift checks
    reconcileInterval: "5m"
    # Automatically remediate drift if detected
    autoRemediate: true
---
apiVersion: v1
kind: Secret
metadata:
  name: bizflycloud-credentials
  namespace: karpenter
type: Opaque
stringData:
  email: "your-email@example.com"
  password: "your-password"
---
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: default
spec:
  # Reference the ProviderConfig
  providerRef:
    name: default
    apiVersion: bizflycloud.karpenter.sh/v1alpha1
    kind: ProviderConfig
  
  # Define requirements for nodes
  requirements:
    # Specify allowed instance types
    - key: "node.kubernetes.io/instance-type"
      operator: In
      values: ["4c_8g", "8c_16g", "16c_32g"]
    
    # Specify allowed zones
    - key: "topology.kubernetes.io/zone"
      operator: In
      values: ["HN1-a", "HN1-b"]
    
    # Specify image to use
    - key: "karpenter.bizflycloud.sh/image-id"
      operator: In
      values: ["ubuntu-20.04"]
    
    # Use spot instances for cost savings (optional)
    - key: "karpenter.bizflycloud.sh/instance-spot"
      operator: In
      values: ["true"]
  
  # Define resource limits for this provisioner
  limits:
    resources:
      cpu: 100
      memory: 200Gi
  
  # Specify time-to-live for nodes
  ttlSecondsAfterEmpty: 30
  ttlSecondsUntilExpired: 2592000 # 30 days
  
  # Optional: labels to apply to all nodes created by this provisioner
  labels:
    provisioner: default
    environment: production
  
  # Optional: taints to apply to all nodes created by this provisioner
  # This example restricts pods to only those that tolerate production nodes
  taints:
    - key: environment
      value: production
      effect: NoSchedule